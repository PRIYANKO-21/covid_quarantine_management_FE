{"ast":null,"code":"var _jsxFileName = \"/home/biswad/Hospital-App-Frontend/src/components/viewEHR.js\";\nimport React, { Component, useState } from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { isAccordionItemSelected } from \"react-bootstrap/esm/AccordionContext\";\nimport './viewEHR.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ViewEHR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: {},\n      pid: '',\n      cid: '',\n      goAhead: false\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  componentDidMount() {\n    console.log(\"Calling\");\n    const token = this.getCookie('doctor_cookie');\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n    };\n    axios.get('http://localhost:8081/get-ehr/' + this.props.match.params.patientId + '/' + this.props.match.params.consentId, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }) // .then(response => \n    //   {\n    //     console.log(response);\n    //     this.setState({pid:this.props.match.params.patientId,cid:this.props.match.params.consentId})\n    //     this.setState({records: response.data});\n    //   }\n    // )\n    .then(response => {\n      this.setState({\n        record: response.data,\n        goAhead: true\n      }); //console.log(\"Dis Mount\")\n      //console.log(this.state.record);\n      //this.state.record.\n    });\n  }\n\n  render() {\n    const {\n      match,\n      location,\n      history\n    } = this.props; //var { record } = this.state;\n    //console.log(\"HEre\")\n    //console.log(this.state.record.episodesDTOList);\n\n    console.log(\"Params\" + this.props.match.params.patientId); //console.log(record)\n\n    if (this.state.goAhead) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.record.episodesDTOList.map(_ref => {\n          let {\n            encounters,\n            episodeId,\n            episodeName\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"loop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Episodes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"episodes\",\n              children: [\"Episode Id : \", episodeId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"episodes\",\n              children: [\"Episode Name : \", episodeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 39\n            }, this), encounters.map(_ref2 => {\n              let {\n                doctorName,\n                encounterId,\n                op_records\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"episodes\",\n                  children: \"Encounters :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"encounter\",\n                  children: [\"Doctor Name : \", doctorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"encounter\",\n                  children: [\"Encounter Id : \", encounterId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 42\n                }, this), op_records.map(_ref3 => {\n                  let {\n                    diagnosis,\n                    op_record_id,\n                    recordDetails,\n                    timestamp\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"encounter\",\n                      children: \"OpRecords:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"op_records\",\n                      children: [\"Diagnosis : \", diagnosis]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"op_records\",\n                      children: [\"Op Record Id : \", op_record_id]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"op_records\",\n                      children: [\"Complaints : \", recordDetails.complaints]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"op_records\",\n                      children: [\"Prescription : \", recordDetails.prescription]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 49\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 38\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nViewEHR.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nconst CreateConsentWithRouter = withRouter(ViewEHR);\n_c = CreateConsentWithRouter;\nexport default CreateConsentWithRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConsentWithRouter\");","map":{"version":3,"sources":["/home/biswad/Hospital-App-Frontend/src/components/viewEHR.js"],"names":["React","Component","useState","axios","PropTypes","useParams","withRouter","isAccordionItemSelected","ViewEHR","constructor","props","state","record","pid","cid","goAhead","getCookie","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","componentDidMount","console","log","token","headers","get","match","params","patientId","consentId","then","response","setState","data","render","location","history","episodesDTOList","map","encounters","episodeId","episodeName","doctorName","encounterId","op_records","diagnosis","op_record_id","recordDetails","timestamp","complaints","prescription","propTypes","object","isRequired","CreateConsentWithRouter"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAA+B;AAE3BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG,EADE;AAEXC,MAAAA,GAAG,EAAG,EAFK;AAGXC,MAAAA,GAAG,EAAG,EAHK;AAIXC,MAAAA,OAAO,EAAG;AAJC,KAAb;AAMD;;AAYPC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,UAAMC,IAAI,GAAGD,KAAK,GAAG,GAArB;AACA,UAAME,QAAQ,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAnC,CAFa,CAEyC;;AACtD,UAAMC,IAAI,GAAGJ,QAAQ,CAAEK,KAAV,CAAgB,IAAhB,CAAb;AACA,QAAIC,GAAJ;AACAF,IAAAA,IAAI,CAACG,OAAL,CAAaC,GAAG,IAAI;AAChB,UAAIA,GAAG,CAACC,OAAJ,CAAYV,IAAZ,MAAsB,CAA1B,EAA6BO,GAAG,GAAGE,GAAG,CAACE,SAAJ,CAAcX,IAAI,CAACY,MAAnB,CAAN;AAChC,KAFD;AAGA,WAAOL,GAAP;AACD;;AAEFM,EAAAA,iBAAiB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEI,UAAMC,KAAK,GAAG,KAAKlB,SAAL,CAAe,eAAf,CAAd;AACA,UAAMmB,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,qCAA+B,GAFnB;AAGZ,sCAAgC;AAHpB,KAAhB;AAKAhC,IAAAA,KAAK,CAACiC,GAAN,CAAU,mCAAiC,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzD,GAAmE,GAAnE,GAAuE,KAAK7B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBE,SAAzG,EACA;AACIL,MAAAA,OAAO,EAAE;AACT,yBAAkB,UAASD,KAAM;AADxB;AADb,KADA,EAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,KAaCO,IAbD,CAaMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACd/B,QAAAA,MAAM,EAAE8B,QAAQ,CAACE,IADH;AAEd7B,QAAAA,OAAO,EAAC;AAFM,OAAd,EADc,CAKd;AACA;AAEA;AACH,KAtBD;AA4BP;;AAEG8B,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACR,MAAAA,KAAD;AAAOS,MAAAA,QAAP;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKrC,KAAtC,CADI,CAGJ;AACA;AACA;;AAEAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKvB,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBC,SAA/C,EAPI,CAQJ;;AACA,QAAG,KAAK5B,KAAL,CAAWI,OAAd,EAAsB;AAClB,0BACI;AAAA,kBAGI,KAAKJ,KAAL,CAAWC,MAAX,CAAkBoC,eAAlB,CAAkCC,GAAlC,CAAsC;AAAA,cAAC;AAACC,YAAAA,UAAD;AAAcC,YAAAA,SAAd;AAAyBC,YAAAA;AAAzB,WAAD;AAAA,8BAC9B;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEU;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,0CAAuCD,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFV,eAGU;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,4CAAyCC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHV,EAKMF,UAAU,CAACD,GAAX,CAAe;AAAA,kBAAC;AAACI,gBAAAA,UAAD;AAAYC,gBAAAA,WAAZ;AAAwBC,gBAAAA;AAAxB,eAAD;AAAA,kCACZ;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGX;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAHW,eAQI;AAAI,kBAAA,SAAS,EAAC,WAAd;AAAA,+CAAyCF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,eASI;AAAI,kBAAA,SAAS,EAAC,WAAd;AAAA,gDAA0CC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,EAYSC,UAAU,CAACN,GAAX,CAAe;AAAA,sBAAC;AAACO,oBAAAA,SAAD;AAAWC,oBAAAA,YAAX;AAAwBC,oBAAAA,aAAxB;AAAsCC,oBAAAA;AAAtC,mBAAD;AAAA,sCACb;AAAA,4CACE;AAAI,sBAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAI,sBAAA,SAAS,EAAC,YAAd;AAAA,iDAAwCH,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAI,sBAAA,SAAS,EAAC,YAAd;AAAA,oDAA2CC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAIE;AAAI,sBAAA,SAAS,EAAC,YAAd;AAAA,kDAAyCC,aAAa,CAACE,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,eAKE;AAAI,sBAAA,SAAS,EAAC,YAAd;AAAA,oDAA2CF,aAAa,CAACG,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADa;AAAA,iBAAf,CAZT;AAAA;AAAA;AAAA;AAAA;AAAA,sBADY;AAAA,aAAf,CALN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD8B;AAAA,SAAtC;AAHJ,uBADJ;AA0CH,KA3CD,MA4CI;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AAEJ;;AAjI0B;;AAAzBrD,O,CAeCsD,S,GAAY;AACfzB,EAAAA,KAAK,EAAEjC,SAAS,CAAC2D,MAAV,CAAiBC,UADT;AAEflB,EAAAA,QAAQ,EAAE1C,SAAS,CAAC2D,MAAV,CAAiBC,UAFZ;AAGfjB,EAAAA,OAAO,EAAE3C,SAAS,CAAC2D,MAAV,CAAiBC;AAHX,C;AAoHnB,MAAMC,uBAAuB,GAAG3D,UAAU,CAACE,OAAD,CAA1C;KAAMyD,uB;AACN,eAAeA,uBAAf","sourcesContent":["import React, {Component, useState} from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { isAccordionItemSelected } from \"react-bootstrap/esm/AccordionContext\";\nimport './viewEHR.css'\n\nclass ViewEHR extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n          record : {},\n          pid : '',\n          cid : '',\n          goAhead : false\n        }\n      }\n\n      \n\n\nstatic propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n};\n\n   \ngetCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n    \n componentDidMount(){\n    console.log(\"Calling\")\n    \n        const token = this.getCookie('doctor_cookie');\n        const headers = { \n            \"Content-Type\": \"application/json\" ,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n        };\n        axios.get('http://localhost:8081/get-ehr/'+this.props.match.params.patientId+'/'+this.props.match.params.consentId,  \n        { \n            headers: {\n            'Authorization': `Bearer ${token}` \n          }  \n        })\n        // .then(response => \n        //   {\n        //     console.log(response);\n        //     this.setState({pid:this.props.match.params.patientId,cid:this.props.match.params.consentId})\n        //     this.setState({records: response.data});\n        //   }\n        // )\n        .then(response => {\n            this.setState({\n            record: response.data,\n            goAhead:true \n            })\n            //console.log(\"Dis Mount\")\n            //console.log(this.state.record);\n            \n            //this.state.record.\n        });\n\n\n\n\n    \n} \n\n    render(){\n        const {match,location,history} = this.props;\n\n        //var { record } = this.state;\n        //console.log(\"HEre\")\n        //console.log(this.state.record.episodesDTOList);\n\n        console.log(\"Params\" + this.props.match.params.patientId);\n        //console.log(record)\n        if(this.state.goAhead){\n            return(\n                <>\n                \n                {\n                    this.state.record.episodesDTOList.map(({encounters , episodeId, episodeName  }) => (\n                            <div id=\"loop\">\n                                <h3>Episodes:</h3>\n                                      <li className=\"episodes\">Episode Id : {episodeId}</li>\n                                      <li className=\"episodes\">Episode Name : {episodeName}</li>\n                                {\n                                  encounters.map(({doctorName,encounterId,op_records})=>(\n                                     <div>\n                                         <h3 className=\"episodes\">Encounters :</h3>  \n                                   \n                          <div className=\"row\">\n                            <div className=\"col-md-6\">\n    \n                      </div>\n                    </div>\n                                         <li className=\"encounter\">Doctor Name : {doctorName}</li>\n                                         <li className=\"encounter\">Encounter Id : {encounterId}</li>\n                                           \n                                         {\n                                              op_records.map(({diagnosis,op_record_id,recordDetails,timestamp})=>(\n                                                <div>\n                                                  <h3 className=\"encounter\">OpRecords:</h3>\n                                                  <li className=\"op_records\">Diagnosis : {diagnosis}</li>\n                                                  <li className=\"op_records\">Op Record Id : {op_record_id}</li>\n                                                  <li className=\"op_records\">Complaints : {recordDetails.complaints}</li>\n                                                  <li className=\"op_records\">Prescription : {recordDetails.prescription}</li>                                      \n                                                </div>\n                                              ))\n                                      }\n                                      </div>\n                                  ))\n                              }\n                            </div>\n                          ))\n                   }\n                   </>\n    \n            )            \n        }\n        else{\n            return <h1>Loading...</h1>\n        }\n\n    }\n}\nconst CreateConsentWithRouter = withRouter(ViewEHR);\nexport default CreateConsentWithRouter;"]},"metadata":{},"sourceType":"module"}