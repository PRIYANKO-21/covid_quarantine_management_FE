{"ast":null,"code":"var _jsxFileName = \"/home/biswad/Hospital-App-Frontend/src/components/viewEHR.js\";\nimport React, { Component, useState } from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { isAccordionItemSelected } from \"react-bootstrap/esm/AccordionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ViewEHR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: {},\n      pid: '',\n      cid: ''\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  componentDidMount() {\n    console.log(\"Calling\");\n    const token = this.getCookie('doctor_cookie');\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n    };\n    axios.get('http://localhost:8081/get-ehr/' + this.props.match.params.patientId + '/' + this.props.match.params.consentId, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }) // .then(response => \n    //   {\n    //     console.log(response);\n    //     this.setState({pid:this.props.match.params.patientId,cid:this.props.match.params.consentId})\n    //     this.setState({records: response.data});\n    //   }\n    // )\n    .then(response => {\n      this.setState({\n        record: response.data\n      });\n      console.log(this.state.record.episodesDTOList);\n    });\n  }\n\n  render() {\n    const {\n      match,\n      location,\n      history\n    } = this.props; //var { record } = this.state;\n\n    console.log(\"Params\" + this.props.match.params.patientId); //console.log(record)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nViewEHR.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nconst CreateConsentWithRouter = withRouter(ViewEHR);\n_c = CreateConsentWithRouter;\nexport default CreateConsentWithRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConsentWithRouter\");","map":{"version":3,"sources":["/home/biswad/Hospital-App-Frontend/src/components/viewEHR.js"],"names":["React","Component","useState","axios","PropTypes","useParams","withRouter","isAccordionItemSelected","ViewEHR","constructor","props","state","record","pid","cid","getCookie","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","componentDidMount","console","log","token","headers","get","match","params","patientId","consentId","then","response","setState","data","episodesDTOList","render","location","history","propTypes","object","isRequired","CreateConsentWithRouter"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,uBAAT,QAAwC,sCAAxC;;;AAGA,MAAMC,OAAN,SAAsBP,SAAtB,CAA+B;AAE3BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG,EADE;AAEXC,MAAAA,GAAG,EAAG,EAFK;AAGXC,MAAAA,GAAG,EAAG;AAHK,KAAb;AAKD;;AAYPC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,UAAMC,IAAI,GAAGD,KAAK,GAAG,GAArB;AACA,UAAME,QAAQ,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAnC,CAFa,CAEyC;;AACtD,UAAMC,IAAI,GAAGJ,QAAQ,CAAEK,KAAV,CAAgB,IAAhB,CAAb;AACA,QAAIC,GAAJ;AACAF,IAAAA,IAAI,CAACG,OAAL,CAAaC,GAAG,IAAI;AAChB,UAAIA,GAAG,CAACC,OAAJ,CAAYV,IAAZ,MAAsB,CAA1B,EAA6BO,GAAG,GAAGE,GAAG,CAACE,SAAJ,CAAcX,IAAI,CAACY,MAAnB,CAAN;AAChC,KAFD;AAGA,WAAOL,GAAP;AACD;;AAEFM,EAAAA,iBAAiB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEI,UAAMC,KAAK,GAAG,KAAKlB,SAAL,CAAe,eAAf,CAAd;AACA,UAAMmB,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,qCAA+B,GAFnB;AAGZ,sCAAgC;AAHpB,KAAhB;AAKA/B,IAAAA,KAAK,CAACgC,GAAN,CAAU,mCAAiC,KAAKzB,KAAL,CAAW0B,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzD,GAAmE,GAAnE,GAAuE,KAAK5B,KAAL,CAAW0B,KAAX,CAAiBC,MAAjB,CAAwBE,SAAzG,EACA;AACIL,MAAAA,OAAO,EAAE;AACT,yBAAkB,UAASD,KAAM;AADxB;AADb,KADA,EAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,KAaCO,IAbD,CAaMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACd9B,QAAAA,MAAM,EAAE6B,QAAQ,CAACE;AADH,OAAd;AAGAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,MAAX,CAAkBgC,eAA9B;AACH,KAlBD;AAwBP;;AAEGC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACT,MAAAA,KAAD;AAAOU,MAAAA,QAAP;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKrC,KAAtC,CADI,CAGJ;;AAEAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKtB,KAAL,CAAW0B,KAAX,CAAiBC,MAAjB,CAAwBC,SAA/C,EALI,CAMJ;;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AAuCH;;AAjH0B;;AAAzB9B,O,CAcCwC,S,GAAY;AACfZ,EAAAA,KAAK,EAAEhC,SAAS,CAAC6C,MAAV,CAAiBC,UADT;AAEfJ,EAAAA,QAAQ,EAAE1C,SAAS,CAAC6C,MAAV,CAAiBC,UAFZ;AAGfH,EAAAA,OAAO,EAAE3C,SAAS,CAAC6C,MAAV,CAAiBC;AAHX,C;AAqGnB,MAAMC,uBAAuB,GAAG7C,UAAU,CAACE,OAAD,CAA1C;KAAM2C,uB;AACN,eAAeA,uBAAf","sourcesContent":["import React, {Component, useState} from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { isAccordionItemSelected } from \"react-bootstrap/esm/AccordionContext\";\n\n\nclass ViewEHR extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n          record : {},\n          pid : '',\n          cid : ''\n        }\n      }\n\n      \n\n\nstatic propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n};\n\n   \ngetCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n    \n componentDidMount(){\n    console.log(\"Calling\")\n    \n        const token = this.getCookie('doctor_cookie');\n        const headers = { \n            \"Content-Type\": \"application/json\" ,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n        };\n        axios.get('http://localhost:8081/get-ehr/'+this.props.match.params.patientId+'/'+this.props.match.params.consentId,  \n        { \n            headers: {\n            'Authorization': `Bearer ${token}` \n          }  \n        })\n        // .then(response => \n        //   {\n        //     console.log(response);\n        //     this.setState({pid:this.props.match.params.patientId,cid:this.props.match.params.consentId})\n        //     this.setState({records: response.data});\n        //   }\n        // )\n        .then(response => {\n            this.setState({\n            record: response.data    \n            })\n            console.log(this.state.record.episodesDTOList);\n        });\n\n\n\n\n    \n} \n\n    render(){\n        const {match,location,history} = this.props;\n\n        //var { record } = this.state;\n        \n        console.log(\"Params\" + this.props.match.params.patientId);\n        //console.log(record)\n        return <div>\n            {/* {record} */}\n            {/* {this.state.pid}\n            {this.state.cid} */}\n\n            {/* {this.state.records.ehr_id} */}\n\n{/*             <ul>\n                <li>\n                    Ehr_id: {this.state.record.ehr_id}\n                    Episodes:\n                    {\n                        this.state.record.episodesDTOList.map(episode => (\n                            <li>\n                                Episode Name: {episode.episodeName}\n                                Encounters:{\n                                    episode.encounters.map(encounter => (\n                                        <li>\n                                            Encounter Id: {encounter.encounterId}\n                                            Doctor Name: {encounter.doctorName}\n                                            OP Records:{\n                                                encounter.op_records.map(op_record => (\n                                                    <li>\n                                                        Diagnosis: {op_record.diagnosis}\n                                                        Time: {op_record.timestamp}\n                                                        Details: {op_record.recordDetails}\n                                                    </li>\n                                                ))\n                                            }\n                                        </li>\n                                    ))\n                                }\n                            </li>\n                        ))\n                    }\n                </li>\n            </ul> */}\n            \n        </div>\n    }\n}\nconst CreateConsentWithRouter = withRouter(ViewEHR);\nexport default CreateConsentWithRouter;"]},"metadata":{},"sourceType":"module"}