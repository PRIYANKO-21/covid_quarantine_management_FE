{"ast":null,"code":"var _jsxFileName = \"/home/biswad/Hospital-App-Frontend_prev/src/components/grantedConsents.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport viewEHR from './components/viewEHR.js';\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport './grantedConsents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GrantedConsentPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      getEhrResp: false,\n      pid: '',\n      cid: '',\n      Vehr: false\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  async getUsersData() {\n    const token = this.getCookie('doctor_cookie'); //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    const res = await axios.get('http://localhost:8082/get-granted-consents', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(res.data);\n    this.setState({\n      loading: false,\n      users: res.data\n    });\n  }\n\n  async getData(pid, cid) {\n    //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    //console.log(pid+\" \"+cid)\n    // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n    //   headers: {\n    //       'Authorization': 'doc_123'\n    //   }\n    // })\n    this.setState({\n      getEhrResp: true\n    }); //console.log(res);\n  }\n\n  componentDidMount() {\n    this.getUsersData();\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Patient ID',\n      accessor: 'patient_id'\n    }, {\n      Header: 'Patient Name',\n      accessor: 'patientName'\n    }, {\n      Header: 'Consent Id',\n      accessor: 'consent_id'\n    }, {\n      Header: 'Delegate Access',\n      accessor: 'delegateAccess'\n    }, {\n      Header: 'Validity',\n      accessor: 'validity'\n    }, {\n      Header: 'View',\n      accessor: 'email',\n      Cell: _ref => {\n        let {\n          original\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => {\n            console.log(original);\n            e.preventDefault(); //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n\n            this.setState({\n              pid: original.patient_id,\n              cid: original.consent_id\n            });\n            this.getData(original.patient_id, original.consent_id);\n            this.setState({\n              Vehr: true\n            });\n          },\n          children: \"View Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      Header: 'View',\n      accessor: 'email',\n      Cell: _ref2 => {\n        let {\n          original\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => {\n            console.log(original);\n            e.preventDefault(); //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n\n            this.setState({\n              cid: original.consent_id\n            });\n            this.getData(original.consent_id);\n          },\n          children: \"Delegate Consent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n\n    if (!this.state.getEhrResp) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactTable, {\n          data: this.state.users,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this);\n    } else {\n      if (this.State.Vehr == true) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/view-ehr/\" + this.state.pid + '/' + this.state.cid\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }, this);else if (this.State.Vehr == false) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/delegate-consent/\" + this.state.cid\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n}\n\nexport default GrantedConsentPage;","map":{"version":3,"sources":["/home/biswad/Hospital-App-Frontend_prev/src/components/grantedConsents.js"],"names":["useState","React","Component","axios","ReactTable","viewEHR","Link","Redirect","NavLink","GrantedConsentPage","constructor","props","state","users","loading","getEhrResp","pid","cid","Vehr","getCookie","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","getUsersData","token","get","headers","console","log","data","setState","getData","componentDidMount","render","columns","Header","accessor","Cell","original","e","preventDefault","patient_id","consent_id","State","pathname"],"mappings":"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","sourcesContent":["  import {useState} from 'react';\n  import React, { Component } from 'react';\n  import axios from 'axios';\n  import ReactTable from \"react-table-6\";  \n  import \"react-table-6/react-table.css\" \n  import viewEHR from './components/viewEHR.js';\n  import {Link} from \"react-router-dom\";\n  import { Redirect } from 'react-router';\n  import { NavLink } from 'react-bootstrap';\n  import './grantedConsents.css'\n\n  class GrantedConsentPage extends Component {\n      constructor(props){\n        super(props)\n        this.state = {\n          users: [],\n          loading:true,\n          getEhrResp : false,\n          pid : '',\n          cid : '',\n          Vehr : false\n        }\n      }\n\n      getCookie(cName) {\n        const name = cName + \"=\";\n        const cDecoded = decodeURIComponent(document.cookie); //to be careful\n        const cArr = cDecoded .split('; ');\n        let res;\n        cArr.forEach(val => {\n            if (val.indexOf(name) === 0) res = val.substring(name.length);\n        })\n        return res;\n      }\n\n      async getUsersData(){\n        const token = this.getCookie('doctor_cookie');\n        //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        const res = await axios.get('http://localhost:8082/get-granted-consents',{\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        console.log(res.data)\n        this.setState({loading:false, users: res.data})\n      }\n\n      async getData(pid,cid){\n        //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n          //console.log(pid+\" \"+cid)\n        // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n        //   headers: {\n        //       'Authorization': 'doc_123'\n        //   }\n        // })\n        this.setState({getEhrResp:true});\n        //console.log(res);\n\n      }\n\n\n\n      componentDidMount(){\n        this.getUsersData()\n      }\n      render() {\n        const columns = [{  \n          Header: 'Patient ID',  \n          accessor: 'patient_id',\n        }\n        ,{  \n          Header: 'Patient Name',  \n          accessor: 'patientName' ,\n          }\n        \n        ,{  \n        Header: 'Consent Id',  \n        accessor: 'consent_id' ,\n        }\n        ,{  \n        Header: 'Delegate Access',  \n        accessor: 'delegateAccess',\n        },\n        {  \n          Header: 'Validity',  \n          accessor: 'validity',\n          },\n\n          {\n            Header: 'View',  \n          accessor: 'email',\n        Cell: ({ original }) => (\n          <button\n            type=\"button\"\n            onClick={(e) => {\n            console.log(original);\n              e.preventDefault();\n              //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n              this.setState({pid:original.patient_id,cid:original.consent_id})\n              this.getData(original.patient_id,original.consent_id)  ;\n              this.setState({Vehr:true});\n            }}\n          >\n            View Record\n          </button>)\n          },\n          {\n            Header: 'View',  \n          accessor: 'email',\n        Cell: ({ original }) => (\n          <button\n            type=\"button\"\n            onClick={(e) => {\n            console.log(original);\n              e.preventDefault();\n              //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n              this.setState({cid:original.consent_id})\n              this.getData(original.consent_id)  ;\n            }}\n          >\n            Delegate Consent\n          </button>)\n          }\n          \n      ]\n      if(!this.state.getEhrResp){\n        return (\n          <div>\n            <ReactTable  \n            data={this.state.users}  \n            columns={columns}  \n            />\n          </div>\n\n        )      \n      }\n      else{\n        if(this.State.Vehr == true)\n          return <Redirect to = {{ pathname: \"/view-ehr/\" + this.state.pid+'/'+this.state.cid }} />;\n        else if(this.State.Vehr == false)\n        return <Redirect to = {{ pathname: \"/delegate-consent/\" + this.state.cid }} />;\n      }\n\n      }\n    }\n\n  export default GrantedConsentPage;"]},"metadata":{},"sourceType":"module"}