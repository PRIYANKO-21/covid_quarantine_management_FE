[{"/home/priyanko/covid_quarantine_management_FE/src/index.js":"1","/home/priyanko/covid_quarantine_management_FE/src/App.js":"2","/home/priyanko/covid_quarantine_management_FE/src/reportWebVitals.js":"3","/home/priyanko/covid_quarantine_management_FE/src/components/allocateRoom.js":"4","/home/priyanko/covid_quarantine_management_FE/src/components/adminLogin.js":"5","/home/priyanko/covid_quarantine_management_FE/src/components/addRooms.js":"6","/home/priyanko/covid_quarantine_management_FE/src/components/addTestResult.js":"7","/home/priyanko/covid_quarantine_management_FE/src/components/Navbar.js":"8","/home/priyanko/covid_quarantine_management_FE/src/components/addMember.js":"9","/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js":"10","/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js":"11","/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js":"12","/home/priyanko/covid_quarantine_management_FE/src/url.js":"13"},{"size":593,"mtime":1651239002914,"results":"14","hashOfConfig":"15"},{"size":4725,"mtime":1651239002914,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1651239002914,"results":"17","hashOfConfig":"15"},{"size":3678,"mtime":1651313287663,"results":"18","hashOfConfig":"15"},{"size":3062,"mtime":1651744231644,"results":"19","hashOfConfig":"15"},{"size":3296,"mtime":1651313275850,"results":"20","hashOfConfig":"15"},{"size":3125,"mtime":1651313279646,"results":"21","hashOfConfig":"15"},{"size":3030,"mtime":1651744159658,"results":"22","hashOfConfig":"15"},{"size":3982,"mtime":1651313271870,"results":"23","hashOfConfig":"15"},{"size":4303,"mtime":1651313295719,"results":"24","hashOfConfig":"15"},{"size":4892,"mtime":1651320146113,"results":"25","hashOfConfig":"15"},{"size":5473,"mtime":1651835840837,"results":"26","hashOfConfig":"15"},{"size":162,"mtime":1651898160516,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1jqoef1",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/priyanko/covid_quarantine_management_FE/src/index.js",[],[],["74","75"],"/home/priyanko/covid_quarantine_management_FE/src/App.js",["76","77","78","79","80","81","82"],[],"//import React from \"react\";\nimport React, { useState,useEffect,useRef } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport AdminLoginPage from './components/adminLogin';\nimport AddRoomsPage from './components/addRooms';\nimport AddTestResultPage from './components/addTestResult';\nimport FreeRoomsPage from './components/freeRoom';\nimport AllocateRoomsPage from './components/allocateRoom';\nimport DeallocateRoomsPage from './components/deallocateRoom';\nimport AddMemberPage from \"./components/addMember\";\nimport GetPositiveStudPage from \"./components/getpositivestud\"\n\nlet isLoggedIn = false;\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\n\n\n\n\nconst Home = () => {\n\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <h1>COVID QUARANATINE MANAGEMENT </h1>\n      </section>\n    </>\n  );\n};\n\n\nconst AdminLogin = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <AdminLoginPage/>\n      </section>\n    </>\n  );\n};\n\n\nconst AddTests = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <AddTestResultPage/>\n      </section>\n    </>\n  );\n};\n\nconst AddRooms = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <AddRoomsPage/>\n      </section>\n    </>\n  );\n};\n\nconst FreeRooms = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <FreeRoomsPage/>\n      </section>\n    </>\n  );\n};\n\nconst AllocateRooms = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <AllocateRoomsPage/>\n      </section>\n    </>\n  );\n};\n\nconst DeallocateRooms = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <DeallocateRoomsPage/>\n      </section>\n    </>\n  );\n};\n\nconst AddNewMembers = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <AddMemberPage/>\n      </section>\n    </>\n  );\n};\n\nconst PositiveStudents = () => {\n  return (\n    <>\n      <Navbar />\n      <section className=\"hero-section\">\n        <GetPositiveStudPage/>\n      </section>\n    </>\n  );\n};\n\n\nconst AdminLogout= () => {\n  document.cookie = \"admin_cookie\" + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n  \n  return <Redirect to = {{ pathname: \"/login-admin\" }} />;\n  \n};\n\n\nconst App = () => {\n\n  function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n  }\n\n  let cookie;\n\n  const [adminLoginStatus,setAdminLoginStatus] = useState(false);\n  \n  const [isLoggedIn,setLoggedInStatus] = useState(false);\n\n  const [showMediaIcons, setShowMediaIcons] = useState(false);\n\n\n  //useEffect is called during loading component,on changes to component and on leaving(unmounting) a component\n\n  const isInitialMount = useRef(true);\n  //Restricting useEffect to run only on updates except initial mount\n  useEffect(() => {\n    \n    if (isInitialMount.current) {\n      //findCookie();\n\n      cookie = getCookie(\"admin_cookie\");\n      if(cookie==null){\n        setAdminLoginStatus(false);\n        \n      } \n      else{\n        setAdminLoginStatus(true);\n      }\n\n      isInitialMount.current = false;\n    } else {\n      // Your useEffect code here to be run on update\n      //findCookie();\n      cookie = getCookie(\"admin_cookie\");\n      if(cookie==null){\n        setAdminLoginStatus(false);\n        \n      } \n      else{\n        setAdminLoginStatus(true);\n      }\n    }\n    if(!adminLoginStatus ){\n      setLoggedInStatus(false);\n    }\n    else{\n      setLoggedInStatus(true);\n    }\n    //console.log(cookie);\n  });\n\n\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"/login-admin\">\n        <AdminLogin />\n      </Route>   \n      <Route path=\"/add-members\">\n        <AddNewMembers />\n      </Route>\n      <Route path=\"/add-rooms\">\n        <AddRooms />\n      </Route>\n      <Route path=\"/add-tests\">\n        <AddTests />\n      </Route>\n      <Route path=\"/free-room\">\n        <FreeRooms />\n      </Route>\n      <Route path=\"/allocate-room/:room_id\">\n        <AllocateRooms />\n      </Route>\n      <Route path=\"/deallocate-rooms\">\n        <DeallocateRooms />\n      </Route>\n      <Route path=\"/logout\">\n        <AdminLogout/>\n      </Route>\n      <Route path=\"/positive-students\">\n        <PositiveStudents/>\n      </Route>\n\n    </Switch>\n  );\n};\n\nexport default App;\n","/home/priyanko/covid_quarantine_management_FE/src/reportWebVitals.js",[],[],"/home/priyanko/covid_quarantine_management_FE/src/components/allocateRoom.js",["83","84","85","86","87","88","89"],[],"\nimport React,{Component} from 'react'\nimport {Form ,Button} from 'react-bootstrap'\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { Redirect } from 'react-router';\nimport tinyUrl from '../url';\n//import { Redirect } from 'react-router';\n\n\nclass AllocateRoomsPage extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            student_id : '',\n            res_data : {},\n            url:'',\n            room_id : this.props.match.params.room_id,\n            isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n        }\n        this.submitAllocateRooms = this.submitAllocateRooms.bind(this);\n        this.detailsChange = this.detailsChange.bind(this);\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    getCookie(cName) {\n        const name = cName + \"=\";\n        const cDecoded = decodeURIComponent(document.cookie); //to be careful\n        const cArr = cDecoded .split('; ');\n        let res;\n        cArr.forEach(val => {\n            if (val.indexOf(name) === 0) res = val.substring(name.length);\n        })\n        return res;\n      }\n\n      componentDidMount(){\n        console.log(tinyUrl());\n        this.setState({url:tinyUrl()});\n      }\n\n    submitAllocateRooms(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token=this.getCookie('admin_cookie')\n      const headers = {\n          \"Authorization\" : `Bearer ${token}`\n      };\n      \n      //axios.post('http://localhost:8095/allocate-room/'+this.state.student_id+'/'+this.props.match.params.room_id, {headers})\n        axios.post(this.state.url+'allocate-room/', this.state, {headers})\n       .then(response => \n         {\n            if(response.status==200){\n                alert(\"Room Allocated!\");\n              }\n              else if(response.status==500){\n                alert(\"Student has already been allocated\");\n                // this.setState({\n                //     res_data: response.data,\n                // })\n                 //alert(response.data);\n                 console.log(\"Already allocated\");\n                 console.log(response.data);\n              }\n         }\n      )\n    .catch(err=>{\n      console.log(err);\n      alert(\"Already allocated\");\n    });\n  }\n\n  detailsChange(event){\n    this.setState({\n        [event.target.name]:event.target.value\n    });\n}\n\n\n    render(){\n        if(this.state.isloggedin)\n        {\n        const {match,location,history} = this.props;\n        return (\n        \n            <div className=\"AllocateRooms\">\n                <h1>ALLOCATE ROOMS</h1>\n                <Form onSubmit = {this.submitAllocateRooms}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicstudentID\">\n                        <Form.Label>Enter Student Id</Form.Label>\n                        <Form.Control required type=\"text\" name=\"student_id\" value={this.state.student_id} onChange={this.detailsChange} /*placeholder=\"Your Name\"*/ />\n                    </Form.Group>\n\n\n                    <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n                        Allocate Room\n                    </Button>\n                </Form>\n            </div>\n              \n        );\n        }\n        else{\n            return <Redirect to = {{ pathname: \"/\" }} />;\n          }\n    }\n\n}\n\n\n//export default DelegateConsentPage;\nconst AllocateRoomsWithRouter = withRouter(AllocateRoomsPage);\nexport default  AllocateRoomsWithRouter;\n\n    ","/home/priyanko/covid_quarantine_management_FE/src/components/adminLogin.js",["90"],[],"/home/priyanko/covid_quarantine_management_FE/src/components/addRooms.js",["91","92","93"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './registration.css';\nimport tinyUrl from '../url';\n\n\nclass AddRoomsPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        roomNum : null,\n         floorNum : null,\n         url:'',\n         isloggedin : this.getCookie('admin_cookie')!=undefined ? true : false\n    }\n    this.submitAddRooms = this.submitAddRooms.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n  }\n\n\n   getCookie(cName) {\n     const name = cName + \"=\";\n     const cDecoded = decodeURIComponent(document.cookie); //to be careful\n     const cArr = cDecoded .split('; ');\n     let res;\n     cArr.forEach(val => {\n         if (val.indexOf(name) === 0) res = val.substring(name.length);\n     })\n     return res;\n   }\n   componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n\n  submitAddRooms(event){\n      const token=this.getCookie('admin_cookie');\n      console.log(this.state);\n      event.preventDefault();\n      // const token = this.getCookie('admin_cookie');\n      const headers = {\n        //'Access-Control-Allow-Origin':'*' \n        'Authorization': `Bearer ${token}` \n       };\n\n      \n      \n      // axios.post('http://localhost:8102/add-room', this.state)\n      axios.post(this.state.url+'add-room', this.state, {headers})\n      .then(response => \n        {\n          console.log(response.status)\n          if(response.status===200){\n            alert(\"Room Added!\");\n          }\n          else{\n            alert(\"Room already exists\");\n          }\n        }\n        \n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Room already exists\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    //if(this.state.isloggedin){\n      return (\n        <div className=\"AddRoomsPage\">\n          <h1>Add Rooms</h1>\n          <Form onSubmit={this.submitAddRooms}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicRoomNumber\">\n              <Form.Label>Room Number</Form.Label>\n              <Form.Control\n                required type=\"Number\"\n                value={this.state.roomNum}\n                name = \"roomNum\"\n                onChange={this.detailsChange}\n                placeholder = \"enter room number\"\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicFloorNumber\">\n              <Form.Label>Floor Number</Form.Label>\n              <Form.Control\n                required type=\"Number\"\n                value={this.state.floorNum}\n                onChange={this.detailsChange}\n                placeholder=\"enter floor number\"\n                name=\"floorNum\"\n              />\n            </Form.Group>\n            <Button size=\"lg\" type=\"submit\">\n              Add room\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n    // }\n    // else{\n    //   return <Redirect to = {{ pathname: \"/\" }} />;\n    // }\n\n  }\n}\n\nexport default AddRoomsPage;","/home/priyanko/covid_quarantine_management_FE/src/components/addTestResult.js",["94","95"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './addRooms.css';\nimport tinyUrl from '../url';\n\n\nclass AddTestResultPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        student_id : '',\n        result : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n    }\n    this.submitAddTestResult = this.submitAddTestResult.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n    \n  }\n\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n\n  componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n  submitAddTestResult(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token = this.getCookie('admin_cookie');\n      const headers = { \n          'Authorization': `Bearer ${token}` \n      };\n\n      \n      \n      axios.post(this.state.url+'add-test', this.state,{headers})\n      .then(response => \n        {\n          if(response.status==200){\n            alert(\"Result Added!\");\n          }\n          else{\n            alert(\"Result not added.Please Try Again\");\n          }\n          }\n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Test not added.Please Try Again\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    if(this.state.isloggedin){\n      return (\n        <div className=\"AddTestResultPage\">\n          <h1>Add Test Result</h1>\n          <Form onSubmit={this.submitAddTestResult}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicStudentId\">\n              <Form.Label>Student ID</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.student_id}\n                name = \"student_id\"\n                onChange={this.detailsChange}\n                placeholder = \"Enter student ID\"\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicResult\">\n              <Form.Label>Result</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.result}\n                onChange={this.detailsChange}\n                placeholder=\"Enter +VE / -VE / Pending\"\n                name=\"result\"\n              />\n            </Form.Group>\n            <Button size=\"lg\" type=\"submit\">\n              Add Test Result\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n     }\n    else{\n      return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n  }\n}\n\nexport default AddTestResultPage;","/home/priyanko/covid_quarantine_management_FE/src/components/Navbar.js",["96","97","98","99"],[],"/home/priyanko/covid_quarantine_management_FE/src/components/addMember.js",["100","101"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './registration.css';\nimport tinyUrl from '../url';\n\n\nclass AddMemberPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        sName : '',\n        sEmail : '',\n        sRoll : '',\n        url:'',\n        sContact : '',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n\n    }\n    this.submitAddMember = this.submitAddMember.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n  }\n\n  componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n\n  submitAddMember(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token = this.getCookie('admin_cookie');\n      const headers = { \n          'Authorization': `Bearer ${token}` \n      };\n  \n      \n      //axios.post('http://localhost:8102/add-member', this.state)\n      axios.post(this.state.url+'add-member', this.state,{headers})\n      .then(response => \n        {\n          if(response.status==200){\n            alert(\"Student Added!\");\n          }\n          else{\n            alert(\"Result not added.Please Try Again\");\n          }\n          }\n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Already student exists\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    \n    if(this.state.isloggedin){\n      return (\n        <div className=\"AddMemberPage\">\n          <h1>Add Member</h1>\n          <Form onSubmit={this.submitAddMember}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicStudentName\">\n              <Form.Label>Student Name</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sName}\n                name = \"sName\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicEmailId\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sEmail}\n                name = \"sEmail\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicRollNumber\">\n              <Form.Label>Roll Number</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sRoll}\n                name = \"sRoll\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicContactNumber\">\n              <Form.Label>Contact Number</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sContact}\n                name = \"sContact\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n        \n            <Button size=\"lg\" type=\"submit\">\n              Add Member\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n    }\n    else{\n      return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n  }\n}\n\nexport default AddMemberPage;","/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js",["102","103","104","105","106","107"],[],"import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Button from \"react-bootstrap/Button\";\nimport './addtable.css'\nimport tinyUrl from '../url';\n\n\nclass FreeRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n  //   async getUsersData(){\n  //     const token = this.getCookie('admin_cookie');\n  //     const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //      const res2 = await axios.get('http://localhost:8095/get-freerooms')\n  //      {\n  //       headers: {\n  //         \"Authorization\" : `Bearer ${token}`\n  //       }\n  //     })\n  //     // const headers = {\n  //     //   \"Authorization\" : `Bearer ${token}`\n  //  // };\n  //      console.log(res2.data)\n  //     this.setState({loading:false, users: res2.data})\n  //   }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get(this.state.url+'get-freerooms',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    async getData(room_id){\n      // const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n      //   console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      this.setState({viewrooms:true});\n      //console.log(res);\n\n   }\n\n\n    componentDidMount(){\n      this.getUsersData()\n      console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n    }\n    render() {\n\n    if(this.state.isloggedin)\n    {\n    if(!this.state.viewrooms){\n          return (\n            <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n            <MDBTableHead>\n              <tr>\n                <th>Available Room ID</th>\n                <th>Available Room Numbers</th>\n                <th>Available Floor Numbers</th>\n                <th>Allocate</th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.users.map((obj)=>(\n                 <tr>\n                    <td>{obj.room_id}</td>\n                    <td>{obj.roomNum}</td>\n                    <td>{obj.floorNum}</td>\n                    <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n  \n                              e.preventDefault();\n                              this.setState({room_id:obj.room_id})\n                              this.getData(obj.room_id)  ;\n                              \n                          }}\n                      >\n                          Allocate Room\n                      </Button>\n                    \n                    </td>\n                    \n  \n                </tr>   \t\t\n                \n                \n                ))\n              }\n      \n            </MDBTableBody>\n          </MDBTable>\n          )\n     \n    }\n    else{\n      \n      return <Redirect to = {{ pathname: \"/allocate-room/\" + this.state.room_id }} />;\n      \n    }\n  }\n  else\n  {\n    return <Redirect to = {{ pathname: \"/\" }} />;\n  }\n\n    }\n  }\n\nexport default FreeRoomsPage;","/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js",["108","109","110","111","112"],[],"/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js",["113","114","115","116","117","118"],[],"/home/priyanko/covid_quarantine_management_FE/src/url.js",[],[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":15,"column":5,"nodeType":"125","messageId":"126","endLine":15,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":17,"column":10,"nodeType":"125","messageId":"126","endLine":17,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":131,"column":36,"nodeType":"130","messageId":"131","endLine":131,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":150,"column":10,"nodeType":"125","messageId":"126","endLine":150,"endColumn":20},{"ruleId":"123","severity":1,"message":"132","line":152,"column":10,"nodeType":"125","messageId":"126","endLine":152,"endColumn":24},{"ruleId":"123","severity":1,"message":"133","line":152,"column":26,"nodeType":"125","messageId":"126","endLine":152,"endColumn":43},{"ruleId":"134","severity":1,"message":"135","line":164,"column":16,"nodeType":"136","endLine":164,"endColumn":41},{"ruleId":"123","severity":1,"message":"137","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":37,"column":22,"nodeType":"140","messageId":"141","endLine":37,"endColumn":37,"fix":"142"},{"ruleId":"143","severity":1,"message":"144","line":62,"column":31,"nodeType":"130","messageId":"145","endLine":62,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":65,"column":38,"nodeType":"130","messageId":"145","endLine":65,"endColumn":40},{"ruleId":"123","severity":1,"message":"146","line":92,"column":16,"nodeType":"125","messageId":"126","endLine":92,"endColumn":21},{"ruleId":"123","severity":1,"message":"147","line":92,"column":22,"nodeType":"125","messageId":"126","endLine":92,"endColumn":30},{"ruleId":"123","severity":1,"message":"148","line":92,"column":31,"nodeType":"125","messageId":"126","endLine":92,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":45,"column":27,"nodeType":"130","messageId":"145","endLine":45,"endColumn":29},{"ruleId":"123","severity":1,"message":"149","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":18},{"ruleId":"143","severity":1,"message":"150","line":20,"column":53,"nodeType":"130","messageId":"145","endLine":20,"endColumn":55},{"ruleId":"138","severity":1,"message":"139","line":30,"column":19,"nodeType":"140","messageId":"141","endLine":30,"endColumn":34,"fix":"151"},{"ruleId":"138","severity":1,"message":"139","line":31,"column":18,"nodeType":"140","messageId":"141","endLine":31,"endColumn":33,"fix":"152"},{"ruleId":"143","severity":1,"message":"144","line":56,"column":29,"nodeType":"130","messageId":"145","endLine":56,"endColumn":31},{"ruleId":"123","severity":1,"message":"153","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":43},{"ruleId":"123","severity":1,"message":"154","line":1,"column":45,"nodeType":"125","messageId":"126","endLine":1,"endColumn":60},{"ruleId":"123","severity":1,"message":"133","line":24,"column":26,"nodeType":"125","messageId":"126","endLine":24,"endColumn":43},{"ruleId":"143","severity":1,"message":"150","line":31,"column":16,"nodeType":"130","messageId":"145","endLine":31,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":37,"column":18,"nodeType":"140","messageId":"141","endLine":37,"endColumn":33,"fix":"155"},{"ruleId":"143","severity":1,"message":"144","line":58,"column":29,"nodeType":"130","messageId":"145","endLine":58,"endColumn":31},{"ruleId":"123","severity":1,"message":"156","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":17},{"ruleId":"123","severity":1,"message":"157","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"158","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"159","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":31,"column":20,"nodeType":"140","messageId":"141","endLine":31,"endColumn":35,"fix":"160"},{"ruleId":"123","severity":1,"message":"161","line":57,"column":13,"nodeType":"125","messageId":"126","endLine":57,"endColumn":16},{"ruleId":"123","severity":1,"message":"156","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":17},{"ruleId":"123","severity":1,"message":"157","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"158","line":7,"column":9,"nodeType":"125","messageId":"126","endLine":7,"endColumn":13},{"ruleId":"123","severity":1,"message":"159","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":36,"column":20,"nodeType":"140","messageId":"141","endLine":36,"endColumn":35,"fix":"162"},{"ruleId":"123","severity":1,"message":"156","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":17},{"ruleId":"123","severity":1,"message":"157","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"158","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"159","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":31,"column":20,"nodeType":"140","messageId":"141","endLine":31,"endColumn":35,"fix":"163"},{"ruleId":"123","severity":1,"message":"161","line":41,"column":13,"nodeType":"125","messageId":"126","endLine":41,"endColumn":16},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'getCookie' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'showMediaIcons' is assigned a value but never used.","'setShowMediaIcons' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'cookie' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useParams' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property split.","MemberExpression","unexpectedWhitespace",{"range":"166","text":"167"},"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'match' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.",{"range":"168","text":"167"},{"range":"169","text":"167"},"'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.",{"range":"170","text":"167"},"'useState' is defined but never used.","'ReactTable' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.",{"range":"171","text":"167"},"'res' is assigned a value but never used.",{"range":"172","text":"167"},{"range":"173","text":"167"},"no-global-assign","no-unsafe-negation",[1161,1163],".",[781,783],[788,790],[905,907],[934,936],[1102,1104],[940,942]]